server:
  port: 80

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    username: "${username}"
    password: "${password}"
    url: "${url}"

  #의존성 추가
  servlet:
    multipart:
      max-request-size: 30MB
      max-file-size: 30MB

  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: none
    properties:
      hibernate:
        show_sql: false
        use_sql_comments: true
        format_sql: false
    generate-ddl: true
  elasticsearch:
    username: "${spring.elasticsearch.username}"
    password: "${spring.elasticsearch.password}"
    uris: "${spring.elasticsearch.uris}"

caPath: "${caPath}"

mybatis:
  mapper-locations: classpath:mapper/*.xml

cloud:
  aws:
    credentials:
      accessKey:
      secretKey:
    s3:
      bucketName:
    region:
      static: ap-northeast-2 # 리전
    stack:
      auto: false # Spring Cloud는 환경 또는 스택을 기반으로 이를 자동으로 감지

logging:
  level:
    org:
      elasticsearch:
        client: debug
      springframework:
        data:
          elasticsearch:
            client: debug
      hibernate:
        type:
          descriptor:
            sql: trace
    root: info
    dev.ioexception: info
  file:
    name: "${log.path}"
#  sql.init.mode: always

#management:
#  endpoints:
#    web:
#      exposure:
#        include: *
#  endpoint:
#    metrics:
#      enabled: true
